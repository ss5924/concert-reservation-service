spring.application.name=concert-reservation-service


### MariaDB
spring.datasource.url=jdbc:mariadb://192.168.0.37:3306/concert
spring.datasource.username=root
spring.datasource.password=1234
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver


### JPA
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.default_batch_fetch_size=1000


### Spring Cache
spring.cache.type=redis
spring.cache.redis.cache-null-values=true


### kafka
spring.kafka.bootstrap-servers=192.168.0.37:9092
spring.kafka.template.default-topic=reservation-topic
spring.kafka.consumer.group-id=reservation-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer


# Producer 추가 옵션
spring.kafka.producer.retries=3
spring.kafka.producer.linger.ms=10
spring.kafka.producer.acks=1


# Listener 동작 설정
spring.kafka.listener.concurrency=3
spring.kafka.listener.ack-mode=manual